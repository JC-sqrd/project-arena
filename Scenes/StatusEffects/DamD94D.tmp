[gd_scene load_steps=7 format=3 uid="uid://da5bio18egfg6"]

[ext_resource type="Script" path="res://Scripts/Combat/CombatEffects/StatusEffects/DamageDelayStatusEffect.gd" id="1_l1ftv"]
[ext_resource type="Script" path="res://Scripts/Combat/CombatEffects/DamageEffect.gd" id="2_r7ayv"]
[ext_resource type="Script" path="res://Scripts/StatSystem/Stat.gd" id="4_7qxum"]
[ext_resource type="Script" path="res://Scripts/StatSystem/DuckStatScaler.gd" id="4_lblk8"]
[ext_resource type="Script" path="res://Scripts/StatSystem/Stats/StatScaler.gd" id="4_tg50c"]

[sub_resource type="GDScript" id="GDScript_kovmc"]
script/source = "class_name Stat
extends Node

@export var stat_name : String = \"default_stat\"

@export var stat_value : float = 0 : set = _set_stat_value , get = _get_stat_value

var stat_derived_value : float : set = _set_stat_derived_value
var bonus_value : float = 0
var mod_values : float
var multipliers : float = 1

var mods : Array

signal stat_changed
signal stat_derived_value_changed
signal stat_derived_value_changed_data (old_value : float, new_value : float)
signal stat_changed_data (old_value : float, new_value : float)

func _ready():
	update_stat()
	pass

func update_stat():
	for value in mod_values:
		bonus_value += value
	stat_derived_value = (stat_value + bonus_value) * multipliers
	stat_changed.emit()
	pass

func _set_stat_value(new_value : float):
	var old_value : float = stat_value
	stat_value = new_value
	stat_derived_value = stat_value
	if owner != null:
		print(stat_name +  \" STAT CHANGED \" + owner.name)
	stat_changed_data.emit(old_value, new_value)
	stat_changed.emit()
	pass
	
func _get_stat_value() -> float:
	return stat_value

func _set_stat_derived_value(new_value : float):
	var old_value : float = stat_derived_value
	stat_derived_value = new_value
	stat_derived_value_changed_data.emit(old_value, new_value)
	stat_derived_value_changed.emit()
	pass

func _on_stat_changed():
	pass # Replace with function body.
	
"

[node name="DamageDelayStatusEffect" type="Node" node_paths=PackedStringArray("damage_effect", "stack_stat")]
script = ExtResource("1_l1ftv")
damage_effect = NodePath("DamageEffect")
stack_stat = NodePath("StackStat")
duration = 5.0
stackable = true
id = "damage_delay"

[node name="DamageEffect" type="Node" parent="." node_paths=PackedStringArray("damage_stat")]
script = ExtResource("2_r7ayv")
damage_stat = NodePath("Damage")
damage_type = 1

[node name="Damage" type="Node" parent="DamageEffect"]
script = SubResource("GDScript_kovmc")
stat_value = 50.0

[node name="StatScaler" type="Node" parent="DamageEffect/Damage" node_paths=PackedStringArray("stat", "scale_with_stat")]
script = ExtResource("4_tg50c")
stat = NodePath("..")
scale_with_stat = NodePath("../../../StackStat")
scale_ratio = 1.0

[node name="StackStat" type="Node" parent="."]
script = ExtResource("4_7qxum")
stat_value = 1.0

[node name="DuckStatScaler" type="Node" parent="StackStat" node_paths=PackedStringArray("stat")]
script = ExtResource("4_lblk8")
stat = NodePath("..")
scale_with_stat_id = "magic"
scale_ratio = 1.0
